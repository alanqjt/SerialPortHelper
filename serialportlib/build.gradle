plugins {
    id 'com.android.library'
    id 'maven-publish'
//    id 'signing'
//    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'org.jetbrains.dokka'
//    id 'maven-central-publish'
}

android {
    namespace 'com.alan.serialportlib'
    compileSdk 34


    defaultConfig {
        minSdk 21
        targetSdk 34

//        ndk {
//            abiFilters "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    ndkVersion '26.2.11394342'

}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
}




//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                from components.release
//
//                // JitPack 要求：groupId 必须为 com.github.<你的 GitHub 用户名>
//                groupId = 'com.github.alanqjt'
//                artifactId = 'SerialPortHelper'
//                version = '2.0.0' // 实际上 JitPack 会使用 Git Tag，这里写什么都可以
//
//                // 可选：如果有源码/文档 Jar，可以配置
//                // artifact sourcesJar
//                // artifact javadocJar
//            }
//        }
//    }
//}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}




afterEvaluate {
    publishing {
        publications {
            release(MavenPublication)
            noSignPublication(MavenPublication){
//            release(MavenPublication) {
//                from components.release
//                from components.java


//                groupId = GROUP_ID
//                artifactId = ARTIFACT_ID
//                version = VERSION_BASE_SDK_NAME_MAVEN

                groupId = 'com.github.alanqjt'
                artifactId = 'SerialPortHelper'
                version = '2.0.0' // 实际上 JitPack 会使用 Git Tag，这里写什么都可以


//                groupId = 'io.github.alanqjt'
//                artifactId = 'SerialPortHelper'
//                version = '2.0.0-SNAPSHOT'

                artifact("$buildDir/outputs/aar/${project.name}-release.aar") {
                    builtBy tasks.named("bundleReleaseAar")
                }
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                artifact(sourcesJar) {
                    classifier "sources"
                }


                pom {
                    name = 'SerialPortHelper'
                    description = 'A lightweight and simple Android serial port communication helper.'
                    url = 'https://github.com/alanqjt/SerialPortHelper'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = '9616b897-ffe8-4fe0-92f2-ce76e05256d8'
                            name = 'AlanQu'
                            email = 'alanqjt@163.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:github.com/alanqjt/SerialPortHelper.git'
                        developerConnection = 'scm:git:ssh://github.com/alanqjt/SerialPortHelper.git'
                        url = 'https://github.com/alanqjt/SerialPortHelper'
                    }
                }
            }
        }

//        repositories {
//            maven {
//                //https://central.sonatype.org/publish/release/
//                def releasesRepoUrl = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
//                def snapshotsRepoUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
//                url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
//
//                credentials {
////                    username = project.findProperty("ossrhUsername")
////                    password = project.findProperty("ossrhPassword")
//
//                    username = project.findProperty("ossrhToken") as String
//                    password = project.findProperty("ossrhTokenPassword") as String
//                }
//            }
//        }
    }

//    signing {
//        sign publishing.publications.release
//    }
}


// 禁用 signReleasePublication 任务（强制屏蔽）
//tasks.whenTaskAdded { task ->
//    if (task.name == 'signReleasePublication') {
//        task.enabled = false
//    }
//}

